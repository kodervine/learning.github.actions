name: Comment on Project Issues

on:
  workflow_dispatch:

permissions:
  issues: write

jobs:
  comment-on-issue:
    runs-on: ubuntu-latest

    steps:
      - name: Comment on issues
        uses: actions/github-script@v7
        with:
          script: |
            const issues = await github.paginate(
              github.rest.issues.listForRepo,
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                per_page: 100
              }
            );

            const today = new Date();
            const oneDay = 24 * 60 * 60 * 1000;
            const todayStr = today.toISOString().split('T')[0];

            for (const issue of issues) {
              try {
                const body = issue.body || "";

                const startMatch = body.match(/Start Date:\s*(\d{4}-\d{2}-\d{2})/i);
                const endMatch = body.match(/End Date:\s*(\d{4}-\d{2}-\d{2})/i);

                const startDateStr = startMatch?.[1];
                const endDateStr = endMatch?.[1];

                if (!startDateStr && !endDateStr) {
                  console.log(`Skipped Issue #${issue.number} cos no start or end date found.`);
                  continue;
                }

                let comment = null;

                if (startDateStr === todayStr) {
                  comment = `Note that this task starts today (${startDateStr}).`;
                }

                if (endDateStr) {
                  const formatTime = (date) => new Date(date.getFullYear(), date.getMonth(), date.getDate());
                  const todayDate = formatTime(new Date());
                  const endDate = formatTime(new Date(endDateStr));

                  const diffInDays = Math.floor((endDate - todayDate) / oneDay);


                  if (diffInDays === 0) {
                    comment = `Note: this task is scheduled to end **today** (${endDateStr}).`;
                  } else if (diffInDays === -1) {
                    comment = `This task was due **yesterday** (${endDateStr}) and is still open. Please update its status.`;
                  } else if (diffInDays >= -1 && diffInDays <= 2) {
                    comment = `Gentle reminder: This task is due in **${diffInDays}** day(s) (scheduled for ${endDateStr}).`;
                  }
                }

                if (comment) {
                  await github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    body: comment
                  });
                  console.log(`Commented on issue #${issue.number}`);
                } else {
                  console.log(`â„¹Issue #${issue.number} no event today.`);
                }
              } catch (err) {
                console.error(`Error processing issue #${issue.number}: ${err.message}`);
              }
            }
